<VisualMicro>
  <Program Name="SIP FingerPrint Entry" Ext=".ino" Location="C:\Users\Gabriel_Butcher\Dropbox\SIP\SIP FingerPrint Entry">
    <Compile IsDebugStart="1" IsGdb="0" IsCompiled="0" CompilerErrors="0" ConfigurationName="Release" UseConfigurationNameInBuildFolder="True" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" ReCompileIfSourceIsNewer="1" BuildPath="C:\Users\Gabriel_Butcher\AppData\Local\Temp\VMBuilds\SIP FingerPrint Entry\MiniCore_328\Release" />
    <Platform Name="arduino16x" Platform="avr" Package="MiniCore" Architecture="avr">
      <Board Name="MiniCore_328" Description="ATmega328" CoreFolder="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3\cores\MCUdude_corefiles" VariantFullPath="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3\variants\standard" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\Gabriel_Butcher\Documents\Arduino" name="ATmega328" upload.tool="avrdude" upload.maximum_data_size="2048" bootloader.tool="avrdude" bootloader.unlock_bits="0x3f" bootloader.lock_bits="0x0f" build.core="MCUdude_corefiles" build.board="AVR_ATmega328" menu.bootloader.uart0="Yes (UART0)" menu.bootloader.uart0.upload.maximum_size="32256" menu.bootloader.uart0.upload.protocol="arduino" menu.bootloader.uart0.upload.port="UART0" menu.bootloader.uart0.bootloader.high_fuses="0xd6" menu.bootloader.uart0.bootloader.file="optiboot_flash/bootloaders/{build.mcu}/{build.f_cpu}/optiboot_flash_{build.mcu}_{upload.port}_{upload.speed}_{build.f_cpu}.hex" menu.bootloader.uart1="Yes (UART1 328PB only)" menu.bootloader.uart1.upload.maximum_size="32256" menu.bootloader.uart1.upload.protocol="arduino" menu.bootloader.uart1.upload.port="UART1" menu.bootloader.uart1.bootloader.high_fuses="0xd6" menu.bootloader.uart1.bootloader.file="optiboot_flash/bootloaders/{build.mcu}/{build.f_cpu}/optiboot_flash_{build.mcu}_{upload.port}_{upload.speed}_{build.f_cpu}.hex" menu.bootloader.no_bootloader="No bootloader" menu.bootloader.no_bootloader.upload.maximum_size="32768" menu.bootloader.no_bootloader.bootloader.high_fuses="0xd7" menu.bootloader.no_bootloader.bootloader.file="empty/empty.hex" menu.variant.modelP="328P / 328PA" menu.variant.modelP.bootloader.cksel_bits="0111" menu.variant.modelP.bootloader.cfd_bit="1" menu.variant.modelP.build.variant="standard" menu.variant.modelP.build.mcu="atmega328p" menu.variant.modelNonP="328 / 328A" menu.variant.modelNonP.bootloader.cksel_bits="0111" menu.variant.modelNonP.bootloader.cfd_bit="1" menu.variant.modelNonP.build.variant="standard" menu.variant.modelNonP.build.mcu="atmega328" menu.variant.modelPB="328PB" menu.variant.modelPB.bootloader.cksel_bits="1111" menu.variant.modelPB.bootloader.cfd_bit="0" menu.variant.modelPB.build.variant="pb-variant" menu.variant.modelPB.build.mcu="atmega328pb" menu.BOD.2v7="BOD 2.7V" menu.BOD.2v7.bootloader.extended_fuses="0b1111{bootloader.cfd_bit}101" menu.BOD.4v3="BOD 4.3V" menu.BOD.4v3.bootloader.extended_fuses="0b1111{bootloader.cfd_bit}100" menu.BOD.1v8="BOD 1.8V" menu.BOD.1v8.bootloader.extended_fuses="0b1111{bootloader.cfd_bit}110" menu.BOD.disabled="BOD  disabled" menu.BOD.disabled.bootloader.extended_fuses="0b1111{bootloader.cfd_bit}111" menu.LTO.Os="LTO disabled" menu.LTO.Os.compiler.c.extra_flags="" menu.LTO.Os.compiler.c.elf.extra_flags="" menu.LTO.Os.compiler.cpp.extra_flags="" menu.LTO.Os.ltoarcmd="avr-ar" menu.LTO.Os_flto="LTO enabled" menu.LTO.Os_flto.compiler.c.extra_flags="-Wextra -flto -g" menu.LTO.Os_flto.compiler.c.elf.extra_flags="-w -flto -g" menu.LTO.Os_flto.compiler.cpp.extra_flags="-Wextra -flto -g" menu.LTO.Os_flto.ltoarcmd="avr-gcc-ar" menu.clock.16MHz_external="16 MHz external" menu.clock.16MHz_external.upload.speed="115200" menu.clock.16MHz_external.bootloader.low_fuses="0b1111{bootloader.cksel_bits}" menu.clock.16MHz_external.build.f_cpu="16000000L" menu.clock.20MHz_external="20 MHz external" menu.clock.20MHz_external.upload.speed="115200" menu.clock.20MHz_external.bootloader.low_fuses="0b1111{bootloader.cksel_bits}" menu.clock.20MHz_external.build.f_cpu="20000000L" menu.clock.18_432MHz_external="18.432 MHz external" menu.clock.18_432MHz_external.upload.speed="115200" menu.clock.18_432MHz_external.bootloader.low_fuses="0b1111{bootloader.cksel_bits}" menu.clock.18_432MHz_external.build.f_cpu="18432000L" menu.clock.12MHz_external="12 MHz external" menu.clock.12MHz_external.upload.speed="57600" menu.clock.12MHz_external.bootloader.low_fuses="0b1111{bootloader.cksel_bits}" menu.clock.12MHz_external.build.f_cpu="12000000L" menu.clock.8MHz_external="8 MHz external" menu.clock.8MHz_external.upload.speed="38400" menu.clock.8MHz_external.bootloader.low_fuses="0b1111{bootloader.cksel_bits}" menu.clock.8MHz_external.build.f_cpu="8000000L" menu.clock.8MHz_internal="8 MHz internal" menu.clock.8MHz_internal.upload.speed="38400" menu.clock.8MHz_internal.bootloader.low_fuses="0xe2" menu.clock.8MHz_internal.build.f_cpu="8000000L" menu.clock.1MHz_internal="1 MHz internal" menu.clock.1MHz_internal.upload.speed="9600" menu.clock.1MHz_internal.bootloader.low_fuses="0x62" menu.clock.1MHz_internal.build.f_cpu="1000000L" runtime.ide.path="C:\Program Files (x86)\Arduino" runtime.os="windows" build.system.path="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3\system" runtime.ide.version="10809" target_package="MiniCore" target_platform="avr" runtime.hardware.path="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr" originalid="328" intellisense.tools.path="{runtime.tools.avr-gcc.path}\" intellisense.include.paths="{intellisense.tools.path}avr\include;{intellisense.tools.path}avr\include\avr;{intellisense.tools.path}lib\gcc\avr\4.8.1\include;{intellisense.tools.path}lib\gcc\avr\4.9.2\include;{intellisense.tools.path}lib\gcc\avr\4.9.3\include;" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.erase.params.verbose="-v" tools.atprogram.erase.params.quiet="-q" tools.atprogram.bootloader.params.verbose="-v" tools.atprogram.bootloader.params.quiet="-q" tools.atprogram.bootloader.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {bootloader.verbose}  program -c -f &quot;{runtime.ide.path}\hardware\arduino\avr\bootloaders\{bootloader.file}&quot;" ide.compiler_flags_no_opt="-Og" tools.gdbstub.cmd="avr-gdb.exe" tools.gdbstub.path="{runtime.tools.avr-gcc.path}/bin" tools.gdbstub.debug.args="&quot;{{{build.path}/{build.project_name}.elf}}&quot; -ex &quot;target remote \\.\{serial.port}&quot;" debug_menu.hwdebugger.gdbstub="GDB Stub" debug_menu.hwdebugger.gdbstub.debug.tool="gdbstub" meta_gdbstub.sentence="This debugger requires the avr-debugger library (by Jan Dolinay) be included in the project (install via Library Manager or from GitHub)." meta_gdbstub.comment="To use this debugger, include the avr-debugger library, add 'debug_init();' to the setup(), and 'breakpoint();' to the top of 'loop()'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to 'No Project', 'No Project + Libraries' or 'None' when debugging (NOTE: This might cause compilation errors with certain code such as HardwareSerial.)" meta_gdbstub.image.connect="https://www.visualmicro.com/pics/Debug-Help-Uno_USBOnly.png" meta_gdbstub.image.operation="https://www.visualmicro.com/pics/Debug-Break-Uno-GDBStub-VSOnly.png" meta_gdbstub.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" version="2.0.3" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.avr-gcc.path}/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD" compiler.c.elf.flags="{compiler.warning_flags} -Os -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD" compiler.ar.cmd="{ltoarcmd}" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" build.extra_flags="" compiler.c.extra_flags="-Wextra -flto -g" compiler.c.elf.extra_flags="-w -flto -g" compiler.S.extra_flags="" compiler.cpp.extra_flags="-Wextra -flto -g" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="{build.path}/{archive_file}" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.output.tmp_file="{build.project_name}.hex" recipe.output.save_file="{build.project_name}_{build.mcu}_{build.f_cpu}.hex" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" preproc.includes.flags="-w -x c++ -M -MG -MP" recipe.preproc.includes="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot;" preproc.macros.flags="-w -x c++ -E -CC" recipe.preproc.macros="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{preprocessed_file_path}&quot;" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd.path="{path}/bin/avrdude" tools.avrdude.config.path="{runtime.platform.path}/avrdude.conf" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.verify="" tools.avrdude.upload.params.noverify="-V" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.params.noverify="-V" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; -v -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; -v -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" tools.avrdude_remote.upload.pattern="/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}" build.usb_manufacturer="&quot;Unknown&quot;" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" vm.platform.root.path="c:\program files (x86)\microsoft visual studio\2019\professional\common7\ide\extensions\cpwzuv43.p51\Micro Platforms\arduino16x" tools.avrdude.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.avrdude.program.verify="" tools.avrdude.upload.network_pattern="&quot;{network_cmd}&quot; -address {serial.port} -port {upload.network.port} -sketch &quot;{build.path}/{build.project_name}.hex&quot; -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}" avrisp.name="AVR ISP" avrisp.communication="serial" avrisp.protocol="stk500v1" avrisp.program.protocol="stk500v1" avrisp.program.tool="avrdude" avrisp.program.extra_params="-P{serial.port}" avrispmkii.name="AVRISP mkII" avrispmkii.communication="usb" avrispmkii.protocol="stk500v2" avrispmkii.program.protocol="stk500v2" avrispmkii.program.tool="avrdude" avrispmkii.program.extra_params="-Pusb" usbtinyisp.name="USBtinyISP" usbtinyisp.protocol="usbtiny" usbtinyisp.program.tool="avrdude" usbtinyisp.program.extra_params="" arduinoisp.name="ArduinoISP" arduinoisp.protocol="arduinoisp" arduinoisp.program.tool="avrdude" arduinoisp.program.extra_params="" arduinoisporg.name="ArduinoISP.org" arduinoisporg.protocol="arduinoisporg" arduinoisporg.program.tool="avrdude" arduinoisporg.program.extra_params="" usbasp.name="USBasp" usbasp.communication="usb" usbasp.protocol="usbasp" usbasp.program.protocol="usbasp" usbasp.program.tool="avrdude" usbasp.program.extra_params="-Pusb" parallel.name="Parallel Programmer" parallel.protocol="dapa" parallel.force="true" parallel.program.tool="avrdude" parallel.program.extra_params="-F" arduinoasisp.name="Arduino as ISP" arduinoasisp.communication="serial" arduinoasisp.protocol="arduino" arduinoasisp.speed="19200" arduinoasisp.program.protocol="arduino" arduinoasisp.program.speed="19200" arduinoasisp.program.tool="avrdude" arduinoasisp.program.extra_params="-P{serial.port} -b{program.speed}" usbGemma.name="Arduino Gemma" usbGemma.protocol="arduinogemma" usbGemma.program.tool="avrdude" usbGemma.program.extra_params="" usbGemma.config.path="{runtime.platform.path}/bootloaders/gemma/avrdude.conf" buspirate.name="BusPirate as ISP" buspirate.communication="serial" buspirate.protocol="buspirate" buspirate.program.protocol="buspirate" buspirate.program.tool="avrdude" buspirate.program.extra_params="-P{serial.port}" stk500.name="Atmel STK500 development board" stk500.communication="serial" stk500.protocol="stk500" stk500.program.protocol="stk500" stk500.program.tool="avrdude" stk500.program.extra_params="-P{serial.port}" jtag3isp.name="Atmel JTAGICE3 (ISP mode)" jtag3isp.communication="usb" jtag3isp.protocol="jtag3isp" jtag3isp.program.protocol="jtag3isp" jtag3isp.program.tool="avrdude" jtag3isp.program.extra_params="" jtag3.name="Atmel JTAGICE3 (JTAG mode)" jtag3.communication="usb" jtag3.protocol="jtag3" jtag3.program.protocol="jtag3" jtag3.program.tool="avrdude" jtag3.program.extra_params="-B0.1" atmel_ice.name="Atmel-ICE (AVR)" atmel_ice.communication="usb" atmel_ice.protocol="atmelice_isp" atmel_ice.program.protocol="atmelice_isp" atmel_ice.program.tool="avrdude" atmel_ice.program.extra_params="-Pusb" runtime.tools.arduinoOTA.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.arduinoOTA-1.2.1.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.3.0-arduino14.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-5.4.0-atmel3.6.1-arduino2.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.tools-avr.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.vm.boardinfo.id="MiniCore_328" runtime.vm.boardinfo.name="MiniCore_328" runtime.vm.boardinfo.desc="ATmega328" runtime.vm.boardinfo.src_location="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3" ide.hint="Use installed IDE. Provides built-in hardware, reference/help and libraries." ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.9.0" ide.default.version="10800" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="Arduino.h" ide.exe_name="arduino" ide.recipe.preproc.defines.flags="-w -x c++ -E -dM" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.builder.exe="arduinobuilder.exe" ide.builder.name="Arduino Builder" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences.arduinoData="{runtime.sketchbook.path}\ArduinoData" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}\java\bin" ide.debug_menu.debugger_type="Debug" ide.debug_menu.debugger_type.none="Off" ide.debug_menu.none.debug.tool="no_debug" ide.debug_menu.debugger_type.universal="Serial" ide.debug_menu.universal.debug.tool="auto" ide.debug_menu.debugger_type.hwdebugger="Hardware" ide.debug_menu.hwdebugger="Debugger" ide.debug_menu.hwdebugger.custom_debugger="Manual/Custom" ide.debug_menu.hwdebugger.custom_debugger.debug.tool="dbg_external" ide.meta_custom_debugger.sentence="Provides a build that includes debug defines and will launch a custom debugger if one is provided." ide.meta_custom_debugger.paragraph="This is option is for advanced use. It is recommended that a pre-configured debugger be selected when available in this list. Usage: Optionally add a customer debugger to the project. A 'debugger_launch.json' file shares the same command syntax that is used by the VsCode debugger. Custom debuggers can be targeted at a board and/or variant and/or configuration name. IE: [variant].[configuration_name][.]debugger_launch.json" ide.meta_custom_debugger.reference.usage.url="https://github.com/Microsoft/vscode-cpptools/blob/master/launch.md#customlaunchsetupcommands" ide.meta_custom_debugger.reference.connect.url="https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2019" ide.debug_menu.vm_disable_optimization="Disable Optimization" ide.debug_menu.vm_disable_optimization.vm_disable_opt_default="Default Optimization" ide.debug_menu.vm_disable_optimization.vm_disable_opt_proj="No Project  Optimization" ide.debug_menu.vm_disable_opt_proj.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_optimization.vm_disable_opt_proj_libs="No Project + Libraries Optimization" ide.debug_menu.vm_disable_opt_proj_libs.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_proj_libs.vm_disable_opt_libraries="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_optimization.vm_disable_opt_all="No Optimization" ide.meta_vm_disable_opt_all.sentence="Disable compiler optimization for all sources:- Project, Library and Platform." ide.meta_vm_disable_opt_all.comment="After switching between 'No Optimization' and other optimization values, please click &quot;Solution Clean&quot; or switch off (or cycle) 'vMicro&gt;Compiler&gt;Shared Cache For Cores'. NOTE: Changing optimization settings can cause build errors or result in overly large programs." ide.debug_menu.vm_disable_opt_all.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_all.vm_disable_opt_libraries="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_all.vm_disable_opt_core="{ide.compiler_flags_no_opt}" ide.appid="arduino16x" location.sketchbook="C:\Users\Gabriel_Butcher\Documents\Arduino" build.core.vmresolved="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3\cores\MCUdude_corefiles" build.core.parentfolder.vmresolved="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3\cores" build.core.coresparentfolder.vmresolved="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3" build.core.path="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3\cores\MCUdude_corefiles" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3" runtime.platform.path="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3" vm.platformname.name="avr" build.arch="AVR" vm.runtime.compiler.cached_cores_path="C:\Users\Gabriel_Butcher\AppData\Local\Temp\VMBCore\arduino16x" vm.runtime.compiler.showwarnings="false" vm.runtime.compiler.showwarnings_core="false" vm.runtime.compiler.showwarnings_library="false" vm.runtime.upload.verbose="true" vm.runtime.upload.verify="false" runtime.vm.ide.platforms.path="c:\program files (x86)\microsoft visual studio\2019\professional\common7\ide\extensions\cpwzuv43.p51\Micro Platforms" runtime.vm.ide.tools.openocd.path="{runtime.tools.openocd-0.9.0.path}" runtime.vm.openocd.path="{runtime.tools.openocd-0.9.0.path}" vm.runtime.build.intermediate_output_path="C:\Users\Gabriel_Butcher\Dropbox\SIP\SIP FingerPrint Entry\Release\" vm.runtime.build.final_output_path="C:\Users\Gabriel_Butcher\Dropbox\SIP\SIP FingerPrint Entry\Release\" compiler.always_include_sketchfolder="true" compiler.always_include_sharedprojectfolders="true" vm.runtime.compiler.auto_discover_includes="true" vm.runtime.compiler.allow_library_debugging="false" serial.port.file="COM5" serial.port="COM5" serial.port.num="5" extra.time.local="1580722189" extra.time.utc="1580722189" extra.time.dst="0" extra.time.zone="0" build.project_name="SIP FingerPrint Entry.ino" build.project_path="C:\Users\Gabriel_Butcher\Dropbox\SIP\SIP FingerPrint Entry" sketch_path="C:\Users\Gabriel_Butcher\Dropbox\SIP\SIP FingerPrint Entry" ProjectDir="C:\Users\Gabriel_Butcher\Dropbox\SIP\SIP FingerPrint Entry\" build.path="C:\Users\Gabriel_Butcher\AppData\Local\Temp\VMBuilds\SIP FingerPrint Entry\MiniCore_328\Release" debug.tool="no_debug" upload.speed="57600" bootloader.low_fuses="0b1111{bootloader.cksel_bits}" build.f_cpu="12000000L" bootloader.extended_fuses="0b1111{bootloader.cfd_bit}110" ltoarcmd="avr-gcc-ar" bootloader.cksel_bits="0111" bootloader.cfd_bit="1" build.variant="standard" build.mcu="atmega328p" upload.maximum_size="32256" upload.protocol="arduino" upload.port="UART0" bootloader.high_fuses="0xd6" bootloader.file="optiboot_flash/bootloaders/{build.mcu}/{build.f_cpu}/optiboot_flash_{build.mcu}_{upload.port}_{upload.speed}_{build.f_cpu}.hex" vm.runtime.compile.skip_library_file_if_exists_in_project="false" vm.runtime.compiler.auto_discover_includes_cache="true" build.vm.build.vmdebug="0" build.vm.build.isgdb="0" build.vm.build.optimised="1" vm.last.buildpath="C:\Users\Gabriel_Butcher\AppData\Local\Temp\VMBuilds\SIP FingerPrint Entry\MiniCore_328\Release" build.architecture="avr" vmresolved.compiler.path="C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\" vmresolved.tools.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" build.variant.vmresolved.name="standard" build.variant.vmresolved.full_path="C:\Users\Gabriel_Butcher\AppData\Local\arduino15\packages\MiniCore\hardware\avr\2.0.3\variants\standard" />
    </Platform>
    <Debug DebugEnabled="0" EnableBreak="1" />
  </Program>
</VisualMicro>